# Global configuration settings (optional)
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    # Logging settings (optional)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Define the upstream block here inside the http block
    upstream web {
        server web;  # Connect to the 'web' service without the port
    }

    # Your custom server block for HTTP and HTTPS handling
    server {
        listen 80;
        server_name wbhub.rwandair.com;

        # Redirect HTTP to HTTPS
        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS server block
    server {
        listen 443 ssl;
        server_name wbhub.rwandair.com;

        # SSL configuration
        ssl_certificate /etc/ssl/private/server.crt;
        ssl_certificate_key /etc/ssl/private/server.key;

        client_max_body_size 100M;

        # Allow serving static files directly through Nginx
        location /static/ {
            alias /app/staticfiles/;
            expires 30d;
            access_log off;
        }

        # Allow serving media files directly through Nginx
        location /media/ {
            alias /app/media/;
            expires 30d;
            access_log off;
        }

        # Proxy requests to Django application (backend + frontend)
        location / {
            proxy_pass http://web;  # Now we reference the 'web' service without the port
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }
    }
}
